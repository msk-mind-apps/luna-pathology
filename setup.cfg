[metadata]
name = luna_pathology
version = attr: luna_pathology.__version__
description = Transformation functions and services for pathology data
long_description = README.rst, CHANGELOG.rst, LICENSE
long_description_content_type = text/x-rst
keywords = pathology, whole slide images
license = Apache License version 2.0
home_page: https://componcmsk.org/msk-mind/
author: msk-mind
author_email: CompOncBST@mskcc.org
classifiers =
    Framework :: Pytest
    Development Status :: 3 - Alpha
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Topic :: Scientific/Engineering :: Artificial Intelligence

# lib can work off of a zip file
[options]
zip_safe = True
include_package_data = True

packages = find:

#[options.packages.find]
#where = .
#include =
#    data_processing/**
#    tests/**
#exclude =

# keep dependencies abstract and not specific to a particular version
install_requires =
    pip
    python-semantic-release
    poetry
    wheel
    watchdog
    flake8
    tox
    coverage
    Sphinx
    sphinx-click
    m2r2
    twine
    click
    pytest
    pytest-cov
    pytest-mock
    pytest-runner
    dask
    distributed
    pyinstaller
    PyYAML
    yamale
    mock
    shapely
    geojson
    pandas
    numpy
    luna-core
    opencv-python
    openslide-python
    pyradiomics
    tifffile
    seaborn
    neo4j
    scikit-image
    ijson
    orjson
    torch
    pyspark
    deltalake
    decorator
    filehash
    joblib
    koalas
    medpy
    minio
    pyarrow
    paramiko
    scp
    checksumdir
    tornado
    jsonpath-ng
    flask_restx
    requests
    Pillow
    testfixtures
    requests-mock
    dirhash
    log4mongo
    staintools


[options.package_data]
* = *.dcm, *.svg, *.bmp, *.yaml, *.yml, *.parquet, *.crc, *.json, *.npy

#[options.extras_require]
#pdf = ReportLab>=1.2; RXP
#rest = docutils>=0.3; pack ==1.1, ==1.3

#[options.data_files]
#test_data = tests/data_processing/testdata/*

# paths to executables
[options.entry_points]
console_scripts =
    dsa_viz = luna_pathology.cli.dsa.dsa_viz:cli
    dsa_upload = luna_pathology.cli.dsa.dsa_upload:cli
    collect_tiles = luna_pathology.cli.collect_tile_segment:cli
    generate_tiles = luna_pathology.cli.generate_tile_labels:cli
    infer_tiles = luna_pathology.cli.infer_tile_labels:cli
    load_slide = luna_pathology.cli.load_slide:cli
    visualize_tiles = luna_pathology.cli.visualize_tile_labels:cli

[bdist_wheel]
universal = 1

[flake8]
exclude = docs

[aliases]
# Define setup.py command aliases here
test = pytest

[tool:pytest]
collect_ignore = ['setup.py']

[semantic_release]
branch = main
version_variable = luna_pathology/__init__.py:__version__
changelog_file = HISTORY.md
commit_parser = semantic_release.history.emoji_parser
commit_version_number = True
check_build_status = True
upload_to_pypi = True
## 1. test push pypitest only
repository = pypitest
upload_to_release = False
## 2. real push to pypi and publish a release on git
# repository = pypi
# upload_to_release = True
